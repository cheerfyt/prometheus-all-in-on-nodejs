version: "3.9"

services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./config/alertrules:/etc/prometheus/rules
      - ./config/targets.json:/prometheus/targets.json
    restart: unless-stopped
    command: "--config.file=/etc/prometheus/prometheus.yml --web.enable-lifecycle"
    depends_on:
      - cadvisor
      - node_exporter
      - alertmanager
        
  pushgateway:
    image: prom/pushgateway
    container_name: pushgateway
    restart: unless-stopped
    ports:
      - "9091:9091"

  # cadvisor monit docker container
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - 9080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped
    
  # alert manager
  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./config/alertmanager.yml:/etc/alertmanager/alertmanager.yml:rw

  # node_exporter
  node_exporter:
    image: prom/node-exporter
    container_name: node_exporter
    ports:
      - "9100:9100"
    restart: unless-stopped
  
  # grafana
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3010:3000"
    restart: unless-stopped
    environment:
      - GF_DEFAULT_INSTANCE_NAME=demo-grafana
      - GF_SECURITY_ADMIN_USER=admin
      - GF_PATHS_DATA=/var/lib/grafana
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

  # dingtalk
  dingtalk:
    image: timonwong/prometheus-webhook-dingtalk
    container_name: dingtalk
    ports:
      - "8060:8060"
    volumes:
      - ./config/dingtalk.yml:/etc/prometheus-webhook-dingtalk/config.yml

  # nginx
  nginx:
    image: nginx:1.19-alpine
    ports:
      - "8080:80"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf

  # nginx-exporter
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.9.0
    ports:
      - "9113:9113"
    command: ["-nginx.scrape-uri", "http://nginx/stub_status"]
    depends_on:
      - nginx

  # ================================================================
  # myapp
  myapp1:
    image: cheerfyt/app:latest
    container_name: my-app1
    ports:
      - "9527:9527"
    restart: unless-stopped

  myapp2:
    image: cheerfyt/app:latest
    container_name: my-app2
    ports:
      - "9528:9527"
    restart: unless-stopped

  myapp3:
    image: cheerfyt/app:latest
    container_name: my-app3
    ports:
      - "9529:9527"
    restart: unless-stopped

  myapp4:
    image: cheerfyt/app:latest
    container_name: my-app4
    ports:
      - "9530:9527"
    restart: unless-stopped

volumes:
  grafana_data: